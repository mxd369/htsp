Use function definitions to:
  save energy
  make code easier to read
  avoid duplicated code

==========================

Suppose we want a function that will give the length of the hypotenuse of any right angle triangle. Which of the following would achieve that?

Remember that the expression we used when the side lengths were 3 and 4 was:

(sqrt (+ (sqr 3) (sqr 4)))

(define (pythag a b))
  (sqrt (+ (sqr a) (sqr b))))

==========================

What should we do to fix the following error:

(define (bar img)
  (* (image-width i) 2))
i: this variable is not defined

Replace i with img, which is the name of the parameter for this function Replace <tt>i</tt> with <tt>img</tt>, which is the name of the parameter for this function - correct

==========================1

Given the function:

(define (foo a b)
  (+ (* 3 a)
     b
    (* b a)))
What is the first step of the evaluation of (foo (+ 1 1) 4), and what is the result of that step?

Evaluate (+ 1 1) and replace it in the function call of foo.
(foo 2 4)
Evaluate <tt>(+ 1 1)</tt> and replace it in the function call of <tt>foo</tt>. <pre> (foo 2 4)</pre> - correct
EXPLANATION

Because (+ 1 1) is an expression, not a value, it is first evaluated to 2 before moving on with the evaluation of foo.

==========================2

After the previous step of the evaluation we are left with:

(foo (+ 1 1) 4) -> (foo 2 4)
What is the next step of the evaluation and what does that leave us with?


Replace (foo 2 4) with the body of foo in which we replace all occurrences of a with 2, and b with 4.

(+ (* 3 2)
   4
   (* 4 2))

EXPLANATION

According to the rules for evaluating function calls, the first step is to replace the function call by the body of the function in which every occurrence of the parameters a and b are replaced by the corresponding arguments 2 and 4.

===========================3

After the previous step of the evaluation we are left with:

(foo (+ 1 1) 4) -> (foo 2 4) -> (+ (* 3 2)
                                    4
									(* 4 2))

What is the next step of the evaluation and what does that leave us with?

(* 3 2) is replaced with 6

(+ 6
   4
   (* 4 2))

EXPLANATION

We now simply evaluate the expression (+ (* 3 2) 4 (* 4 2)) in left to right, inside to outside order, so (* 3 2) evaluates to 6.

===========================4

After the previous step of the evaluation we are left with:

(foo (+ 1 1) 4) -> (foo 2 4) -> (+ (* 3 2)
                                    4
								    (* 4 2))

-> (+ 6
      4
	  (* 4 2))

What is the next step of the evaluation and what does that leave us with?

(* 4 2) is replaced with 8.

(+ 6
   4
   8)

EXPLANATION

Next, the expression (* 4 2) evaluates to 8.

===========================5

After the previous step of the evaluation we are left with:

(foo (+ 1 1) 4) -> (foo 2 4) -> (+ (* 3 2)
                                    4
									(* 4 2))

(+ 6
   4
   (* 4 2))

(+ 6
   4
   8)

What is the next step of the evaluation and what does that leave us with?

6, 4, and 8 are added to produce 18

EXPLANATION
Finally, the expression (+ 6 4 8) evaluates to 18.
===========================
